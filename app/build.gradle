apply plugin: 'com.android.application'

apply plugin: 'com.neenbedankt.android-apt'
//apply plugin: 'realm-android'
//apply plugin: 'newlens'
apply plugin: 'com.dodola.rocoofix'

//用于获取当前时间
def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getDefault())
}

//获取local.properties的内容
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    enforceUniquePackageName = false
//    configurations {
//        all*.exclude group: 'xpp3', module: 'xpp3'
//        all*.exclude group: 'com.google.code.gson', module: 'gson'
//        all*.exclude group: 'com.squareup.okhttp3', module: 'okhttp'
//        all*.exclude group: 'com.squareup.okio', module: 'okio'
//        all*.exclude group: 'io.reactivex', module: 'rxjava'
//        all*.exclude group: 'io.reactivex', module: 'rxandroid'
//    }
    sourceSets {
        main {
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
            jniLibs.srcDirs = ['libs']
        }
    }
    signingConfigs {
        release {
            try {
                storeFile file("template.jks")
                storePassword "template"
                keyAlias "template"
                keyPassword "template"
            } catch (ex) {
                throw new InvalidUserDataException("You should define KEYSTORE_PASSWORD and KEY_PASSWORD in gradle.properties.")
            }

            // relase签名
            //在local.properties 文件里面配置
//            storeFile file(properties.getProperty("keystroe_storeFile"))
//            storePassword properties.getProperty("keystroe_storePassword")
//            keyAlias properties.getProperty("keystroe_keyAlias")
//            keyPassword properties.getProperty("keystroe_keyPassword")

        }
    }
    defaultConfig {
        applicationId "com.hx.template"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 2
        versionName "2.0"
        // dex突破65535的限制
        multiDexEnabled true
        // 默认是umeng的渠道
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "umeng"]

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }
    }

//    splits {
//        abi {
//            enable true
//            reset()
//            include 'x86',  'armeabi'
//            universalApk true
//        }
//    }
    buildTypes {
        release {
            // zip压缩
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources true
            // 混淆代码开启
            minifyEnabled true
            // 混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            // 签名
            signingConfig signingConfigs.release
            // 分渠道打包后文件名（项目名_V版本号_时间_渠道名.apk）
//            applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def outputFile = output.outputFile
//                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
//                        // 输出apk名称为 umengtest_v1.0_2015-01-15_wandoujia.apk
//                        def fileName = "Template_V${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
//                        output.outputFile = new File(outputFile.parent, fileName)
//                    }
//                }
//            }
        }
        debug {
            // 混淆代码开启
            minifyEnabled false
            // 混淆配置文件
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //渠道
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {

        }
        productFlavors.all {
                //设UMENG_CHANNEL_VALUE的值为对应的渠道名(wandoujia、baidu、u360、tencent)
            flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
        }
    }
    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name.equals('release')
                && variant.getFlavors().get(0).name.equals('mock')) {
            variant.setIgnore(true);
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }

    //打包时忽略以下文件
    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/LICENSE'
        exclude('META-INF/LICENSE.txt')
        exclude('META-INF/NOTICE.txt')
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        //bmob umeng推送的jar包含有的okio库跟okhttp的okio库冲突
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.xml'
        exclude 'META-INF/maven/com.squareup.okio/okio/pom.properties'
        exclude 'META-INF/maven/com.squareup.okhttp3/okhttp/pom.xml'
        exclude 'META-INF/maven/com.squareup.okhttp3/okhttp/pom.properties'
        exclude 'META-INF/maven/com.google.code.gson/gson/pom.xml'
        exclude 'META-INF/maven/com.google.code.gson/gson/pom.properties'
        exclude 'META-INF/rxjava.properties'
    }
    //解决android 6.0后移除apache http问题
    useLibrary 'org.apache.http.legacy'

    lintOptions {
        abortOnError false
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'org.powermock:powermock-module-junit4:1.6.4'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.4'
    testCompile 'org.powermock:powermock-api-mockito:1.6.4'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.4'
    testCompile 'org.robolectric:robolectric:3.1.1'
    testCompile 'org.robolectric:shadows-multidex:3.0'
    androidTestCompile 'org.robolectric:robolectric:3.1.1'
    androidTestCompile 'com.github.fabioCollini:DaggerMock:0.6.2'
    //如果你需要在Instrumentation、Espresso、UiAutomator里面使用的话

    //听云性能监测

    //    compile "com.networkbench.newlens.agent.android:nbs.newlens.agent:2.4.1.1"

    //数据库加密
    compile project(':ormlite-sqlcipher')
    //常用工具工程
    compile project(':commonutils')
    compile project(':swipetoloadlayout')
    compile project(':imageloader')
    //bmob
    compile project(':bmobsdk')
//    compile 'cn.bmob.android:bmob-sdk:3.5.3'
    compile project(':mvp')

    compile project(':easemob')

    compile "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:design:$rootProject.supportLibraryVersion"
    compile "com.android.support:palette-v7:$rootProject.supportLibraryVersion"
    compile "com.android.support:support-v4:$rootProject.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    compile "com.google.code.gson:gson:$rootProject.gsonVersion"
    compile "com.squareup.okhttp3:okhttp:$rootProject.okhttpVersion"
    compile "com.squareup.okio:okio:$rootProject.okioVersion"
    compile 'com.android.volley:volley:1.0.0'
    compile "com.squareup.okhttp3:okhttp-urlconnection:$rootProject.okhttpVersion"
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.j256.ormlite:ormlite-core:4.48'
    compile 'com.j256.ormlite:ormlite-android:4.48'
    compile 'com.google.zxing:core:3.2.1'
    compile 'com.bigkoo:convenientbanner:2.0.5'
    compile 'com.edmodo:cropper:1.0.1'
    compile 'com.soundcloud.android:android-crop:1.0.1@aar'
    compile 'com.github.lzyzsd:jsbridge:1.0.2'
    compile "io.reactivex:rxjava:$rootProject.rxjavaVersion"
    compile "io.reactivex:rxandroid:$rootProject.rxandroidVersion"
    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.retrofitVersion"
    compile "com.squareup.retrofit2:retrofit-mock:$rootProject.retrofitVersion"
    compile 'com.karumi:dexter:2.2.2'
    compile 'com.github.lovetuzitong:MultiImageSelector:1.2'
    compile 'id.zelory:compressor:1.0.2'
    compile 'com.github.chrisbanes:PhotoView:1.3.1'
    compile 'com.readystatesoftware.systembartint:systembartint:1.0.3'
    //Dagger2
    compile "com.google.dagger:dagger:$rootProject.daggerVersion"
//    annotationProcessor "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile 'javax.annotation:jsr250-api:1.0'
    apt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    compile 'com.canyinghao:canrefresh:1.0.4'
    compile 'me.leolin:ShortcutBadger:1.1.11@aar'
    compile 'com.allenliu.badgeview:library:1.0.6'
    compile 'com.dodola:rocoo:1.1'
}

rocoo_fix {
//    preVersionPath = '1'
    enable = false
    scanref = false
}
//列出所有依赖包 //gradle -q listJars
task listJars {
    doLast {
        configurations.compile.each { File file -> println file.name }
    }
}